{"ast":null,"code":"var _jsxFileName = \"/home/sergol/DBprojects/instaz/frontend/src/components/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { loginUser } from '../actions';\nimport ErrorMessages from './ErrorMessages';\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string().required('This field is required'),\n  password: Yup.string().required('This field is required')\n});\n\nclass Login extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui container segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"ui center aligned header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Login\", React.createElement(\"div\", {\n      className: \"sub header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Don't have an account yet? \", React.createElement(Link, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Signup\"), \" for an account!\"))), React.createElement(ErrorMessages, {\n      errors: this.props.errorMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Formik, {\n      initialValues: {\n        username: '',\n        password: ''\n      },\n      validationSchema: LoginSchema,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        this.props.loginUser(values).then(response => {\n          setSubmitting(false);\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, ({\n      values,\n      errors,\n      touched,\n      isSubmitting,\n      handleChange\n    }) => React.createElement(Form, {\n      className: isSubmitting ? \"ui loading form\" : \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"div\", {\n      className: \"ui left icon input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: handleChange,\n      value: values.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"user icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(ErrorMessage, {\n      className: \"error\",\n      name: \"username\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"div\", {\n      className: \"ui left icon input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange,\n      value: values.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"lock icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(ErrorMessage, {\n      className: \"error\",\n      name: \"password\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"ui button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Submit\"))), this.props.currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const errorMessages = state.errorMessages,\n        currentUser = state.currentUser;\n  return {\n    errorMessages,\n    currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/home/sergol/DBprojects/instaz/frontend/src/components/Login.js"],"names":["React","connect","Link","Redirect","Formik","Form","ErrorMessage","Yup","loginUser","ErrorMessages","LoginSchema","object","shape","username","string","required","password","Login","Component","render","props","errorMessages","values","setSubmitting","then","response","errors","touched","isSubmitting","handleChange","currentUser","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,YAAvB,QAA2C,QAA3C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,WAAW,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AACrCC,EAAAA,QAAQ,EAAEN,GAAG,CAACO,MAAJ,GACPC,QADO,CACE,wBADF,CAD2B;AAGrCC,EAAAA,QAAQ,EAAET,GAAG,CAACO,MAAJ,GACPC,QADO,CACE,wBADF;AAH2B,CAAnB,CAApB;;AAOA,MAAME,KAAN,SAAoBjB,KAAK,CAACkB,SAA1B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAuD,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvD,qBAFF,CADF,CADF,EAOE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbR,QAAAA,QAAQ,EAAE,EADG;AAEbG,QAAAA,QAAQ,EAAE;AAFG,OADjB;AAKE,MAAA,gBAAgB,EAAEN,WALpB;AAME,MAAA,QAAQ,EAAE,CAACY,MAAD,EAAS;AAAEC,QAAAA;AAAF,OAAT,KAA+B;AACvC,aAAKH,KAAL,CAAWZ,SAAX,CAAqBc,MAArB,EAA6BE,IAA7B,CAAkCC,QAAQ,IAAI;AAC5CF,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SAFD;AAGD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,CAAC;AAAED,MAAAA,MAAF;AAAUI,MAAAA,MAAV;AAAkBC,MAAAA,OAAlB;AAA2BC,MAAAA,YAA3B;AAAyCC,MAAAA;AAAzC,KAAD,KACC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAED,YAAY,GAAG,iBAAH,GAAuB,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,WAAW,EAAC,UAA/C;AAA0D,MAAA,QAAQ,EAAEC,YAApE;AAAkF,MAAA,KAAK,EAAEP,MAAM,CAACT,QAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAME,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,OAAxB;AAAgC,MAAA,IAAI,EAAC,UAArC;AAAgD,MAAA,SAAS,EAAC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,EASE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,WAAW,EAAC,UAAnD;AAA8D,MAAA,QAAQ,EAAEgB,YAAxE;AAAsF,MAAA,KAAK,EAAEP,MAAM,CAACN,QAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAME,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,OAAxB;AAAgC,MAAA,IAAI,EAAC,UAArC;AAAgD,MAAA,SAAS,EAAC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CATF,EAiBE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,CAbJ,CARF,EA2CI,KAAKI,KAAL,CAAWU,WAAX,GAAyB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,GAA+C,IA3CnD,CADF,CADF;AAkDD;;AApDiC;;AAuDpC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA,QACvBX,aADuB,GACQW,KADR,CACvBX,aADuB;AAAA,QACRS,WADQ,GACQE,KADR,CACRF,WADQ;AAE/B,SAAO;AAAET,IAAAA,aAAF;AAAiBS,IAAAA;AAAjB,GAAP;AACD,CAHD;;AAKA,eAAe7B,OAAO,CACpB8B,eADoB,EAEpB;AAAEvB,EAAAA;AAAF,CAFoB,CAAP,CAGbS,KAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { loginUser } from '../actions';\nimport ErrorMessages from './ErrorMessages';\n\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string()\n    .required('This field is required'),\n  password: Yup.string()\n    .required('This field is required'),\n});\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <div className=\"Login\">\n        <div className=\"ui container segment\">\n          <h2 className=\"ui center aligned header\">\n            <div className=\"content\">\n              Login\n              <div className=\"sub header\">Don't have an account yet? <Link to=\"/signup\">Signup</Link> for an account!</div>\n            </div>\n          </h2>\n          <ErrorMessages errors={this.props.errorMessages} />\n          <Formik\n            initialValues={{\n              username: '',\n              password: '',\n            }}\n            validationSchema={LoginSchema}\n            onSubmit={(values, { setSubmitting }) => {\n              this.props.loginUser(values).then(response => {\n                setSubmitting(false);\n              });\n            }}\n          >\n            {({ values, errors, touched, isSubmitting, handleChange }) => (\n              <Form className={isSubmitting ? \"ui loading form\" : \"ui form\"}>\n                <div className=\"required field\">\n                  <label>Username</label>\n                  <div className=\"ui left icon input\">\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} value={values.username} />\n                    <i className=\"user icon\"></i>\n                  </div>\n                  <ErrorMessage className=\"error\" name=\"username\" component=\"div\" />\n                </div>\n                <div className=\"required field\">\n                  <label>Password</label>\n                  <div className=\"ui left icon input\">\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} value={values.password} />\n                    <i className=\"lock icon\"></i>\n                  </div>\n                  <ErrorMessage className=\"error\" name=\"password\" component=\"div\" />\n                </div>\n                <button className=\"ui button\" type=\"submit\">Submit</button>\n              </Form>\n            )}\n          </Formik>\n          {\n            this.props.currentUser ? <Redirect to=\"/\" /> : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { errorMessages, currentUser } = state;\n  return { errorMessages, currentUser };\n};\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n"]},"metadata":{},"sourceType":"module"}