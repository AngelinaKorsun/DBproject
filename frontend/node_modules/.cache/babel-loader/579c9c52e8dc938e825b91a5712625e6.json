{"ast":null,"code":"import _classCallCheck from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Formik,Form}from'formik';var CommentForm=/*#__PURE__*/function(_React$Component){_inherits(CommentForm,_React$Component);function CommentForm(){_classCallCheck(this,CommentForm);return _possibleConstructorReturn(this,_getPrototypeOf(CommentForm).apply(this,arguments));}_createClass(CommentForm,[{key:\"render\",value:function render(){var _this=this;return React.createElement(\"div\",{className:\"extra content\"},React.createElement(Formik,{initialValues:{message:'',post:this.props.post.id},onSubmit:function onSubmit(values,_ref){var resetForm=_ref.resetForm;_this.props.addComment(values).then(function(response){resetForm();values.message='';// clear form\n});}},function(_ref2){var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,isSubmitting=_ref2.isSubmitting,handleChange=_ref2.handleChange;return React.createElement(Form,{className:isSubmitting?\"ui loading form\":\"ui form\"},React.createElement(\"div\",{className:\"ui large transparent left icon input\"},React.createElement(\"i\",{className:\"comment outline icon\"}),React.createElement(\"input\",{className:\"comment-field\",id:_this.props.elementId,type:\"text\",name:\"message\",maxLength:\"400\",placeholder:\"Add Comment...\",onChange:handleChange,value:values.message})));}));}}]);return CommentForm;}(React.Component);export default CommentForm;","map":{"version":3,"sources":["/home/sergol/DBprojects/instaz/frontend/src/components/CommentForm.js"],"names":["React","Formik","Form","CommentForm","message","post","props","id","values","resetForm","addComment","then","response","errors","touched","isSubmitting","handleChange","elementId","Component"],"mappings":"oyBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,QAA7B,C,GAEMC,CAAAA,W,qSACK,gBACP,MACE,4BAAK,SAAS,CAAC,eAAf,EACE,oBAAC,MAAD,EACE,aAAa,CAAE,CACbC,OAAO,CAAE,EADI,CAEbC,IAAI,CAAE,KAAKC,KAAL,CAAWD,IAAX,CAAgBE,EAFT,CADjB,CAKE,QAAQ,CAAE,kBAACC,MAAD,MAA2B,IAAhBC,CAAAA,SAAgB,MAAhBA,SAAgB,CACnC,KAAI,CAACH,KAAL,CAAWI,UAAX,CAAsBF,MAAtB,EAA8BG,IAA9B,CAAmC,SAAAC,QAAQ,CAAI,CAC7CH,SAAS,GACTD,MAAM,CAACJ,OAAP,CAAiB,EAAjB,CAAqB;AACtB,CAHD,EAID,CAVH,EAYG,mBAAGI,CAAAA,MAAH,OAAGA,MAAH,CAAWK,MAAX,OAAWA,MAAX,CAAmBC,OAAnB,OAAmBA,OAAnB,CAA4BC,YAA5B,OAA4BA,YAA5B,CAA0CC,YAA1C,OAA0CA,YAA1C,OACC,qBAAC,IAAD,EAAM,SAAS,CAAED,YAAY,CAAG,iBAAH,CAAuB,SAApD,EACE,2BAAK,SAAS,CAAC,sCAAf,EACE,yBAAG,SAAS,CAAC,sBAAb,EADF,CAEE,6BACE,SAAS,CAAC,eADZ,CAEE,EAAE,CAAE,KAAI,CAACT,KAAL,CAAWW,SAFjB,CAGE,IAAI,CAAC,MAHP,CAIE,IAAI,CAAC,SAJP,CAKE,SAAS,CAAC,KALZ,CAME,WAAW,CAAC,gBANd,CAOE,QAAQ,CAAED,YAPZ,CAQE,KAAK,CAAER,MAAM,CAACJ,OARhB,EAFF,CADF,CADD,EAZH,CADF,CADF,CAkCD,C,yBApCuBJ,KAAK,CAACkB,S,EAuChC,cAAef,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\n\nclass CommentForm extends React.Component {\n  render() {\n    return(\n      <div className=\"extra content\">\n        <Formik\n          initialValues={{\n            message: '',\n            post: this.props.post.id,\n          }}\n          onSubmit={(values, { resetForm }) => {\n            this.props.addComment(values).then(response => {\n              resetForm();\n              values.message = ''; // clear form\n            });\n          }}\n        >\n          {({ values, errors, touched, isSubmitting, handleChange }) => (\n            <Form className={isSubmitting ? \"ui loading form\" : \"ui form\"}>\n              <div className=\"ui large transparent left icon input\">\n                <i className=\"comment outline icon\"></i>\n                <input\n                  className=\"comment-field\"\n                  id={this.props.elementId}\n                  type=\"text\"\n                  name=\"message\"\n                  maxLength=\"400\"\n                  placeholder=\"Add Comment...\"\n                  onChange={handleChange}\n                  value={values.message}\n                />\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}