{"ast":null,"code":"var _jsxFileName = \"/home/sergol/DBprojects/instaz/frontend/src/components/CommentForm.js\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\n\nclass CommentForm extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"extra content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        message: '',\n        post: this.props.post.id\n      },\n      onSubmit: (values, {\n        resetForm\n      }) => {\n        this.props.addComment(values).then(response => {\n          resetForm();\n          values.message = ''; // clear form\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, ({\n      values,\n      errors,\n      touched,\n      isSubmitting,\n      handleChange\n    }) => React.createElement(Form, {\n      className: isSubmitting ? \"ui loading form\" : \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui large transparent left icon input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"comment outline icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"comment-field\",\n      id: this.props.elementId,\n      type: \"text\",\n      name: \"message\",\n      maxLength: \"400\",\n      placeholder: \"Add Comment...\",\n      onChange: handleChange,\n      value: values.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["/home/sergol/DBprojects/instaz/frontend/src/components/CommentForm.js"],"names":["React","Formik","Form","CommentForm","Component","render","message","post","props","id","values","resetForm","addComment","then","response","errors","touched","isSubmitting","handleChange","elementId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACxCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbC,QAAAA,OAAO,EAAE,EADI;AAEbC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IAAX,CAAgBE;AAFT,OADjB;AAKE,MAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,QAAAA;AAAF,OAAT,KAA2B;AACnC,aAAKH,KAAL,CAAWI,UAAX,CAAsBF,MAAtB,EAA8BG,IAA9B,CAAmCC,QAAQ,IAAI;AAC7CH,UAAAA,SAAS;AACTD,UAAAA,MAAM,CAACJ,OAAP,GAAiB,EAAjB,CAF6C,CAExB;AACtB,SAHD;AAID,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,CAAC;AAAEI,MAAAA,MAAF;AAAUK,MAAAA,MAAV;AAAkBC,MAAAA,OAAlB;AAA2BC,MAAAA,YAA3B;AAAyCC,MAAAA;AAAzC,KAAD,KACC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAED,YAAY,GAAG,iBAAH,GAAuB,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,EAAE,EAAE,KAAKT,KAAL,CAAWW,SAFjB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,SAJP;AAKE,MAAA,SAAS,EAAC,KALZ;AAME,MAAA,WAAW,EAAC,gBANd;AAOE,MAAA,QAAQ,EAAED,YAPZ;AAQE,MAAA,KAAK,EAAER,MAAM,CAACJ,OARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAbJ,CADF,CADF;AAkCD;;AApCuC;;AAuC1C,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\n\nclass CommentForm extends React.Component {\n  render() {\n    return(\n      <div className=\"extra content\">\n        <Formik\n          initialValues={{\n            message: '',\n            post: this.props.post.id,\n          }}\n          onSubmit={(values, { resetForm }) => {\n            this.props.addComment(values).then(response => {\n              resetForm();\n              values.message = ''; // clear form\n            });\n          }}\n        >\n          {({ values, errors, touched, isSubmitting, handleChange }) => (\n            <Form className={isSubmitting ? \"ui loading form\" : \"ui form\"}>\n              <div className=\"ui large transparent left icon input\">\n                <i className=\"comment outline icon\"></i>\n                <input\n                  className=\"comment-field\"\n                  id={this.props.elementId}\n                  type=\"text\"\n                  name=\"message\"\n                  maxLength=\"400\"\n                  placeholder=\"Add Comment...\"\n                  onChange={handleChange}\n                  value={values.message}\n                />\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}