{"ast":null,"code":"import _classCallCheck from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{Redirect}from'react-router-dom';import{Formik,Form,ErrorMessage}from'formik';import*as Yup from'yup';import{addPost}from'../actions';import ErrorMessages from'./ErrorMessages';var FILE_SIZE=3*1024*1024;var SUPPORTED_FORMATS=[\"image/jpg\",\"image/jpeg\",\"image/gif\",\"image/png\"];var PostFormSchema=Yup.object().shape({image:Yup.mixed().required('This field is required').test(\"fileSize\",\"File too large (should not be bigger than 3 MB)\",function(value){return value&&value.size<=FILE_SIZE;}).test(\"fileFormat\",\"Unsupported Format (Only JPG, PNG, and GIFs are accepted)\",function(value){return value&&SUPPORTED_FORMATS.includes(value.type);}),caption:Yup.string().max(200,'Caption can only be up to 200 characters.')});var Thumb=/*#__PURE__*/function(_React$Component){_inherits(Thumb,_React$Component);function Thumb(){var _getPrototypeOf2;var _this;_classCallCheck(this,Thumb);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Thumb)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={loading:false,thumb:undefined,rawFile:null};return _this;}_createClass(Thumb,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var _this2=this;if(!nextProps.file||nextProps.file===this.state.rawFile){return;}this.setState({loading:true,rawFile:nextProps.file},function(){var reader=new FileReader();reader.onloadend=function(){_this2.setState({loading:false,thumb:reader.result});};reader.readAsDataURL(nextProps.file);});}},{key:\"render\",value:function render(){var file=this.props.file;var _this$state=this.state,loading=_this$state.loading,thumb=_this$state.thumb;if(!file){return null;}if(loading){return React.createElement(\"p\",null,\"Loading...\");}return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"ui tiny header\"},\"Preview:\"),React.createElement(\"img\",{src:thumb,alt:file.name,className:\"ui centered bordered medium image\"}));}}]);return Thumb;}(React.Component);var PostForm=/*#__PURE__*/function(_React$Component2){_inherits(PostForm,_React$Component2);function PostForm(){var _getPrototypeOf3;var _this3;_classCallCheck(this,PostForm);for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}_this3=_possibleConstructorReturn(this,(_getPrototypeOf3=_getPrototypeOf(PostForm)).call.apply(_getPrototypeOf3,[this].concat(args)));_this3.state={createdPost:null};return _this3;}_createClass(PostForm,[{key:\"render\",value:function render(){var _this4=this;if(this.props.currentUser===null){return React.createElement(Redirect,{to:\"/login\"});}if(this.state.createdPost!==null){return React.createElement(Redirect,{to:\"/p/\".concat(this.state.createdPost.id)});}return React.createElement(\"div\",{className:\"PostForm\"},React.createElement(\"div\",{className:\"ui container segment\"},React.createElement(\"h2\",{className:\"ui center aligned header\"},React.createElement(\"div\",{className:\"content\"},\"Add Post\",React.createElement(\"div\",{className:\"sub header\"},\"Share a moment with everyone!\"))),React.createElement(ErrorMessages,{errors:this.props.errorMessages}),React.createElement(Formik,{initialValues:{image:null,caption:''},validationSchema:PostFormSchema,onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting,props=_ref.props;_this4.props.addPost(values).then(function(response){setSubmitting(false);_this4.setState({createdPost:_this4.props.currentPost});});}},function(_ref2){var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,isSubmitting=_ref2.isSubmitting,handleChange=_ref2.handleChange,setFieldValue=_ref2.setFieldValue;return React.createElement(Form,{className:isSubmitting?\"ui loading form\":\"ui form\"},React.createElement(\"div\",{className:\"required field\"},React.createElement(\"label\",null,\"Image\"),React.createElement(\"div\",{className:\"ui left icon input\"},React.createElement(\"input\",{type:\"file\",name:\"image\",placeholder:\"Image\",onChange:function onChange(event){setFieldValue(\"image\",event.currentTarget.files[0]);}}),React.createElement(\"i\",{className:\"file image icon\"})),React.createElement(ErrorMessage,{className:\"error\",name:\"image\",component:\"div\"})),React.createElement(Thumb,{file:values.image}),React.createElement(\"div\",{className:\"field\"},React.createElement(\"label\",null,\"Caption\"),React.createElement(\"div\",{className:\"ui left icon input\"},React.createElement(\"input\",{type:\"caption\",name:\"caption\",placeholder:\"Caption\",onChange:handleChange,value:values.caption}),React.createElement(\"i\",{className:\"quote left icon\"})),React.createElement(ErrorMessage,{className:\"error\",name:\"caption\",component:\"div\"})),React.createElement(\"button\",{className:\"ui button\",type:\"submit\"},\"Submit\"));})));}}]);return PostForm;}(React.Component);var mapStateToProps=function mapStateToProps(state){var errorMessages=state.errorMessages,currentUser=state.currentUser,currentPost=state.currentPost;return{errorMessages:errorMessages,currentUser:currentUser,currentPost:currentPost};};export default connect(mapStateToProps,{addPost:addPost})(PostForm);","map":{"version":3,"sources":["/home/sergol/DBprojects/instaz/frontend/src/components/PostForm.js"],"names":["React","connect","Redirect","Formik","Form","ErrorMessage","Yup","addPost","ErrorMessages","FILE_SIZE","SUPPORTED_FORMATS","PostFormSchema","object","shape","image","mixed","required","test","value","size","includes","type","caption","string","max","Thumb","state","loading","thumb","undefined","rawFile","nextProps","file","setState","reader","FileReader","onloadend","result","readAsDataURL","props","name","Component","PostForm","createdPost","currentUser","id","errorMessages","values","setSubmitting","then","response","currentPost","errors","touched","isSubmitting","handleChange","setFieldValue","event","currentTarget","files","mapStateToProps"],"mappings":"oyBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,YAAvB,KAA2C,QAA3C,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CAEA,OAASC,OAAT,KAAwB,YAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,GAAMC,CAAAA,SAAS,CAAG,EAAI,IAAJ,CAAW,IAA7B,CACA,GAAMC,CAAAA,iBAAiB,CAAG,CACxB,WADwB,CAExB,YAFwB,CAGxB,WAHwB,CAIxB,WAJwB,CAA1B,CAOA,GAAMC,CAAAA,cAAc,CAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB,CACxCC,KAAK,CAAER,GAAG,CAACS,KAAJ,GACJC,QADI,CACK,wBADL,EAEJC,IAFI,CAGH,UAHG,CAIH,iDAJG,CAKH,SAAAC,KAAK,QAAIA,CAAAA,KAAK,EAAIA,KAAK,CAACC,IAAN,EAAcV,SAA3B,EALF,EAOJQ,IAPI,CAQH,YARG,CASH,2DATG,CAUH,SAAAC,KAAK,QAAIA,CAAAA,KAAK,EAAIR,iBAAiB,CAACU,QAAlB,CAA2BF,KAAK,CAACG,IAAjC,CAAb,EAVF,CADiC,CAaxCC,OAAO,CAAEhB,GAAG,CAACiB,MAAJ,GACNC,GADM,CACF,GADE,CACG,2CADH,CAb+B,CAAnB,CAAvB,C,GAiBMC,CAAAA,K,uYACJC,K,CAAQ,CACNC,OAAO,CAAE,KADH,CAENC,KAAK,CAAEC,SAFD,CAGNC,OAAO,CAAE,IAHH,C,6GAMkBC,S,CAAW,iBACnC,GAAI,CAACA,SAAS,CAACC,IAAX,EAAmBD,SAAS,CAACC,IAAV,GAAmB,KAAKN,KAAL,CAAWI,OAArD,CAA8D,CAAE,OAAS,CAEzE,KAAKG,QAAL,CAAc,CAAEN,OAAO,CAAE,IAAX,CAAiBG,OAAO,CAAEC,SAAS,CAACC,IAApC,CAAd,CAA0D,UAAM,CAC9D,GAAIE,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAb,CAEAD,MAAM,CAACE,SAAP,CAAmB,UAAM,CACvB,MAAI,CAACH,QAAL,CAAc,CAAEN,OAAO,CAAE,KAAX,CAAkBC,KAAK,CAAEM,MAAM,CAACG,MAAhC,CAAd,EACD,CAFD,CAIAH,MAAM,CAACI,aAAP,CAAqBP,SAAS,CAACC,IAA/B,EACD,CARD,EASD,C,uCAEQ,IACCA,CAAAA,IADD,CACU,KAAKO,KADf,CACCP,IADD,iBAEoB,KAAKN,KAFzB,CAECC,OAFD,aAECA,OAFD,CAEUC,KAFV,aAEUA,KAFV,CAIP,GAAI,CAACI,IAAL,CAAW,CACT,MAAO,KAAP,CACD,CAED,GAAIL,OAAJ,CAAa,CACX,MAAO,2CAAP,CACD,CAED,MACE,gCACE,2BAAK,SAAS,CAAC,gBAAf,aADF,CAIE,2BAAK,GAAG,CAAEC,KAAV,CAAiB,GAAG,CAAEI,IAAI,CAACQ,IAA3B,CAAiC,SAAS,CAAC,mCAA3C,EAJF,CADF,CAQD,C,mBAzCiBxC,KAAK,CAACyC,S,KA4CpBC,CAAAA,Q,gaACJhB,K,CAAQ,CACNiB,WAAW,CAAE,IADP,C,4EAIC,iBACP,GAAI,KAAKJ,KAAL,CAAWK,WAAX,GAA2B,IAA/B,CAAqC,CACnC,MAAO,qBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAP,CACD,CAED,GAAI,KAAKlB,KAAL,CAAWiB,WAAX,GAA2B,IAA/B,CAAqC,CACnC,MAAO,qBAAC,QAAD,EAAU,EAAE,cAAQ,KAAKjB,KAAL,CAAWiB,WAAX,CAAuBE,EAA/B,CAAZ,EAAP,CACD,CAED,MACE,4BAAK,SAAS,CAAC,UAAf,EACE,2BAAK,SAAS,CAAC,sBAAf,EACE,0BAAI,SAAS,CAAC,0BAAd,EACE,2BAAK,SAAS,CAAC,SAAf,aAEE,2BAAK,SAAS,CAAC,YAAf,kCAFF,CADF,CADF,CAOE,oBAAC,aAAD,EAAe,MAAM,CAAE,KAAKN,KAAL,CAAWO,aAAlC,EAPF,CAQE,oBAAC,MAAD,EACE,aAAa,CAAE,CACbhC,KAAK,CAAE,IADM,CAEbQ,OAAO,CAAE,EAFI,CADjB,CAKE,gBAAgB,CAAEX,cALpB,CAME,QAAQ,CAAE,kBAACoC,MAAD,MAAsC,IAA3BC,CAAAA,aAA2B,MAA3BA,aAA2B,CAAZT,KAAY,MAAZA,KAAY,CAC9C,MAAI,CAACA,KAAL,CAAWhC,OAAX,CAAmBwC,MAAnB,EAA2BE,IAA3B,CAAgC,SAAAC,QAAQ,CAAI,CAC1CF,aAAa,CAAC,KAAD,CAAb,CACA,MAAI,CAACf,QAAL,CAAc,CAAEU,WAAW,CAAE,MAAI,CAACJ,KAAL,CAAWY,WAA1B,CAAd,EACD,CAHD,EAID,CAXH,EAaG,mBAAGJ,CAAAA,MAAH,OAAGA,MAAH,CAAWK,MAAX,OAAWA,MAAX,CAAmBC,OAAnB,OAAmBA,OAAnB,CAA4BC,YAA5B,OAA4BA,YAA5B,CAA0CC,YAA1C,OAA0CA,YAA1C,CAAwDC,aAAxD,OAAwDA,aAAxD,OACC,qBAAC,IAAD,EAAM,SAAS,CAAEF,YAAY,CAAG,iBAAH,CAAuB,SAApD,EACE,2BAAK,SAAS,CAAC,gBAAf,EACE,yCADF,CAEE,2BAAK,SAAS,CAAC,oBAAf,EACE,6BACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,OAFP,CAGE,WAAW,CAAC,OAHd,CAIE,QAAQ,CAAE,kBAACG,KAAD,CAAW,CAAED,aAAa,CAAC,OAAD,CAAUC,KAAK,CAACC,aAAN,CAAoBC,KAApB,CAA0B,CAA1B,CAAV,CAAb,CAAuD,CAJhF,EADF,CAOE,yBAAG,SAAS,CAAC,iBAAb,EAPF,CAFF,CAWE,oBAAC,YAAD,EAAc,SAAS,CAAC,OAAxB,CAAgC,IAAI,CAAC,OAArC,CAA6C,SAAS,CAAC,KAAvD,EAXF,CADF,CAcE,oBAAC,KAAD,EAAO,IAAI,CAAEZ,MAAM,CAACjC,KAApB,EAdF,CAeE,2BAAK,SAAS,CAAC,OAAf,EACE,2CADF,CAEE,2BAAK,SAAS,CAAC,oBAAf,EACE,6BAAO,IAAI,CAAC,SAAZ,CAAsB,IAAI,CAAC,SAA3B,CAAqC,WAAW,CAAC,SAAjD,CAA2D,QAAQ,CAAEyC,YAArE,CAAmF,KAAK,CAAER,MAAM,CAACzB,OAAjG,EADF,CAEE,yBAAG,SAAS,CAAC,iBAAb,EAFF,CAFF,CAME,oBAAC,YAAD,EAAc,SAAS,CAAC,OAAxB,CAAgC,IAAI,CAAC,SAArC,CAA+C,SAAS,CAAC,KAAzD,EANF,CAfF,CAuBE,8BAAQ,SAAS,CAAC,WAAlB,CAA8B,IAAI,CAAC,QAAnC,WAvBF,CADD,EAbH,CARF,CADF,CADF,CAsDD,C,sBApEoBtB,KAAK,CAACyC,S,EAuE7B,GAAMmB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAlC,KAAK,CAAI,IACvBoB,CAAAA,aADuB,CACqBpB,KADrB,CACvBoB,aADuB,CACRF,WADQ,CACqBlB,KADrB,CACRkB,WADQ,CACKO,WADL,CACqBzB,KADrB,CACKyB,WADL,CAE/B,MAAO,CAAEL,aAAa,CAAbA,aAAF,CAAiBF,WAAW,CAAXA,WAAjB,CAA8BO,WAAW,CAAXA,WAA9B,CAAP,CACD,CAHD,CAKA,cAAelD,CAAAA,OAAO,CACpB2D,eADoB,CAEpB,CAAErD,OAAO,CAAPA,OAAF,CAFoB,CAAP,CAGbmC,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { addPost } from '../actions';\nimport ErrorMessages from './ErrorMessages';\n\nconst FILE_SIZE = 3 * 1024 * 1024;\nconst SUPPORTED_FORMATS = [\n  \"image/jpg\",\n  \"image/jpeg\",\n  \"image/gif\",\n  \"image/png\"\n];\n\nconst PostFormSchema = Yup.object().shape({\n  image: Yup.mixed()\n    .required('This field is required')\n    .test(\n      \"fileSize\",\n      \"File too large (should not be bigger than 3 MB)\",\n      value => value && value.size <= FILE_SIZE\n    )\n    .test(\n      \"fileFormat\",\n      \"Unsupported Format (Only JPG, PNG, and GIFs are accepted)\",\n      value => value && SUPPORTED_FORMATS.includes(value.type)\n    ),\n  caption: Yup.string()\n    .max(200, 'Caption can only be up to 200 characters.')\n});\n\nclass Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n    rawFile: null,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file || nextProps.file === this.state.rawFile) { return; }\n\n    this.setState({ loading: true, rawFile: nextProps.file }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) {\n      return null;\n    }\n\n    if (loading) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n      <div>\n        <div className=\"ui tiny header\">\n          Preview:\n        </div>\n        <img src={thumb} alt={file.name} className=\"ui centered bordered medium image\"/>\n      </div>\n    );\n  }\n}\n\nclass PostForm extends React.Component {\n  state = {\n    createdPost: null\n  };\n\n  render() {\n    if (this.props.currentUser === null) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    if (this.state.createdPost !== null) {\n      return <Redirect to={`/p/${this.state.createdPost.id}`} />;\n    }\n\n    return (\n      <div className=\"PostForm\">\n        <div className=\"ui container segment\">\n          <h2 className=\"ui center aligned header\">\n            <div className=\"content\">\n              Add Post\n              <div className=\"sub header\">Share a moment with everyone!</div>\n            </div>\n          </h2>\n          <ErrorMessages errors={this.props.errorMessages} />\n          <Formik\n            initialValues={{\n              image: null,\n              caption: '',\n            }}\n            validationSchema={PostFormSchema}\n            onSubmit={(values, { setSubmitting, props }) => {\n              this.props.addPost(values).then(response => {\n                setSubmitting(false);\n                this.setState({ createdPost: this.props.currentPost });\n              });\n            }}\n          >\n            {({ values, errors, touched, isSubmitting, handleChange, setFieldValue }) => (\n              <Form className={isSubmitting ? \"ui loading form\" : \"ui form\"}>\n                <div className=\"required field\">\n                  <label>Image</label>\n                  <div className=\"ui left icon input\">\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      placeholder=\"Image\"\n                      onChange={(event) => { setFieldValue(\"image\", event.currentTarget.files[0]); }}\n                    />\n                    <i className=\"file image icon\"></i>\n                  </div>\n                  <ErrorMessage className=\"error\" name=\"image\" component=\"div\" />\n                </div>\n                <Thumb file={values.image} />\n                <div className=\"field\">\n                  <label>Caption</label>\n                  <div className=\"ui left icon input\">\n                    <input type=\"caption\" name=\"caption\" placeholder=\"Caption\" onChange={handleChange} value={values.caption} />\n                    <i className=\"quote left icon\"></i>\n                  </div>\n                  <ErrorMessage className=\"error\" name=\"caption\" component=\"div\" />\n                </div>\n                <button className=\"ui button\" type=\"submit\">Submit</button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { errorMessages, currentUser, currentPost } = state;\n  return { errorMessages, currentUser, currentPost };\n};\n\nexport default connect(\n  mapStateToProps,\n  { addPost }\n)(PostForm);\n"]},"metadata":{},"sourceType":"module"}