{"ast":null,"code":"import _objectSpread from\"/home/sergol/DBprojects/instaz/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{combineReducers}from'redux';var postsReducer=function postsReducer(){var posts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;if(action.type==='FETCH_POSTS'){return action.payload.data;}if(action.type==='TOGGLE_POST_LIKE'){return posts.map(function(post){if(post.id===action.payload.postId){post.is_liked=!post.is_liked;post.likes=post.is_liked?post.likes+1:post.likes-1;}return post;});}if(action.type==='ADD_COMMENT'){return posts.map(function(post){if(post.id===action.payload.post){post.comments.push(action.payload);}return post;});}if(action.type==='EDIT_POST'){var temporaryPosts=[];posts.forEach(function(post){if(post.id===action.payload.id){if(action.payload.is_active)temporaryPosts.push(action.payload);}else{temporaryPosts.push(post);}});return temporaryPosts;}return posts;};var authReducer=function authReducer(){var currentUser=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'LOGIN_USER':case'NEW_USER':return action.payload;case'LOGOUT_USER':return null;default:return currentUser;}};var errorsReducer=function errorsReducer(){var errorMessages=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;if(action.type.includes('FAILURE')){if(typeof action.payload==='string'){errorMessages=[action.payload];}else{var tempErrors=[];Object.keys(action.payload).forEach(function(errorKey){if(typeof action.payload[errorKey]==='string'){tempErrors.push(action.payload[errorKey]);}else{tempErrors=tempErrors.concat(action.payload[errorKey]||[]);}});errorMessages=tempErrors;}}else{errorMessages=[];}return errorMessages;};var viewPostReducer=function viewPostReducer(){var currentPost=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;// React does a shallowEqual on state changes to determine if the component\n// should be re-rendered. By cloning the object, we create a different reference.\n// This variable will be used for times that the currentPost will be manipulated.\nvar currentPostCopy=currentPost===null?null:_objectSpread({},currentPost);if(action.type==='VIEW_POST'){return action.payload;}if(action.type==='TOGGLE_POST_LIKE'){if(currentPost!==null&&currentPost.id===action.payload.postId){currentPostCopy.is_liked=!currentPostCopy.is_liked;currentPostCopy.likes=currentPostCopy.is_liked?currentPostCopy.likes+1:currentPostCopy.likes-1;}}if(action.type==='ADD_COMMENT'){if(currentPost!==null&&currentPost.id===action.payload.post){currentPostCopy.comments.push(action.payload);}}if(action.type==='ADD_POST'){currentPostCopy=action.payload;}currentPost=currentPostCopy;return currentPost;};export default combineReducers({posts:postsReducer,currentPost:viewPostReducer,currentUser:authReducer,errorMessages:errorsReducer});","map":{"version":3,"sources":["/home/sergol/DBprojects/instaz/frontend/src/reducers/index.js"],"names":["combineReducers","postsReducer","posts","action","type","payload","data","map","post","id","postId","is_liked","likes","comments","push","temporaryPosts","forEach","is_active","authReducer","currentUser","errorsReducer","errorMessages","includes","tempErrors","Object","keys","errorKey","concat","viewPostReducer","currentPost","currentPostCopy"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nconst postsReducer = (posts=[], action) => {\n  if (action.type === 'FETCH_POSTS') {\n    return action.payload.data;\n  }\n\n  if (action.type === 'TOGGLE_POST_LIKE') {\n    return posts.map(post => {\n      if (post.id === action.payload.postId) {\n        post.is_liked = !post.is_liked;\n        post.likes = post.is_liked ? post.likes + 1 : post.likes - 1;\n      }\n\n      return post;\n    });\n  }\n\n  if (action.type === 'ADD_COMMENT') {\n    return posts.map(post => {\n      if (post.id === action.payload.post) {\n        post.comments.push(action.payload);\n      }\n\n      return post;\n    });\n  }\n\n  if (action.type === 'EDIT_POST') {\n    let temporaryPosts = [];\n    posts.forEach(post => {\n      if (post.id === action.payload.id) {\n        if (action.payload.is_active) temporaryPosts.push(action.payload);\n      } else {\n        temporaryPosts.push(post);\n      }\n    });\n\n    return temporaryPosts;\n  }\n\n  return posts;\n};\n\nconst authReducer = (currentUser=null, action) => {\n  switch(action.type) {\n    case 'LOGIN_USER':\n    case 'NEW_USER':\n      return action.payload;\n    case 'LOGOUT_USER':\n      return null;\n    default:\n      return currentUser;\n  }\n};\n\nconst errorsReducer = (errorMessages=[], action) => {\n  if (action.type.includes('FAILURE')) {\n    if (typeof action.payload === 'string') {\n      errorMessages = [action.payload];\n    } else {\n      let tempErrors = [];\n      Object.keys(action.payload).forEach(errorKey => {\n        if (typeof action.payload[errorKey] === 'string') {\n          tempErrors.push(action.payload[errorKey]);\n        } else {\n          tempErrors = tempErrors.concat(action.payload[errorKey] || []);\n        }\n      });\n\n      errorMessages = tempErrors;\n    }\n  } else {\n    errorMessages = [];\n  }\n\n  return errorMessages;\n};\n\nconst viewPostReducer = (currentPost=null, action) => {\n  // React does a shallowEqual on state changes to determine if the component\n  // should be re-rendered. By cloning the object, we create a different reference.\n  // This variable will be used for times that the currentPost will be manipulated.\n  let currentPostCopy = currentPost === null ? null : { ...currentPost };\n\n  if (action.type === 'VIEW_POST') {\n    return action.payload;\n  }\n\n  if (action.type === 'TOGGLE_POST_LIKE') {\n    if (currentPost !== null && currentPost.id === action.payload.postId) {\n      currentPostCopy.is_liked = !currentPostCopy.is_liked;\n      currentPostCopy.likes = currentPostCopy.is_liked\n                              ? currentPostCopy.likes + 1\n                              : currentPostCopy.likes - 1;\n    }\n  }\n\n  if (action.type === 'ADD_COMMENT') {\n    if (currentPost !== null && currentPost.id === action.payload.post) {\n      currentPostCopy.comments.push(action.payload);\n    }\n  }\n\n  if (action.type === 'ADD_POST') {\n    currentPostCopy = action.payload;\n  }\n\n  currentPost = currentPostCopy;\n  return currentPost;\n};\n\nexport default combineReducers({\n  posts: postsReducer,\n  currentPost: viewPostReducer,\n  currentUser: authReducer,\n  errorMessages: errorsReducer,\n});\n"]},"metadata":{},"sourceType":"module"}