{"ast":null,"code":"import _objectSpread from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/sergol/DBprojects/instaz/frontend/src/components/PostListItem.js\";\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport CommentForm from './CommentForm';\n\nclass PostListItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isArchiving: false,\n      redirectToHome: false\n    };\n  }\n\n  render() {\n    if (this.state.redirectToHome) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    }\n\n    const _this$props = this.props,\n          currentUser = _this$props.currentUser,\n          post = _this$props.post,\n          isPreview = _this$props.isPreview,\n          showActions = _this$props.showActions;\n\n    const captionPreviewElem = ({\n      id,\n      caption\n    }) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, caption + '...', \" \", React.createElement(Link, {\n      className: \"ui sub header\",\n      to: `/p/${id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"View full caption\"));\n\n    const postActionsElem = (user, post) => React.createElement(\"div\", {\n      className: \"content action-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: () => this.props.likePost(post.id),\n      className: \"clickable big heart like icon\" + (post.is_liked ? \" red\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      onClick: () => {\n        document.getElementById(`comment-field${post.id}`).focus();\n      },\n      className: \"clickable big comment outline link icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"clickable big share icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), // Show archive button for post owner\n    post.author.username === user.username ? React.createElement(\"span\", {\n      className: \"clickable right floated\",\n      \"data-inverted\": \"\",\n      \"data-tooltip\": this.state.isArchiving ? \"Archiving...\" : \"Archive this post\",\n      \"data-position\": \"top center\",\n      onClick: () => {\n        this.setState({\n          isArchiving: true\n        });\n        this.props.editPost(_objectSpread({}, post, {\n          is_active: false\n        })).then(() => {\n          this.setState({\n            isArchiving: false,\n            redirectToHome: !isPreview\n          });\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: (this.state.isArchiving ? \"ui loading circle notch\" : \"archive icon\") + \" big link icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })) : null);\n\n    return React.createElement(\"div\", {\n      className: \"ui fluid card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"ui right floated sub header\",\n      to: `/p/${post.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, post.timesince_posted, \" ago\"), React.createElement(Link, {\n      className: \"ui left floated small header\",\n      to: `/u/${post.author.username}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"ui avatar image\",\n      src: post.author.avatar,\n      alt: `${post.author.username}'s avatar`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), post.author.username)), React.createElement(\"div\", {\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: post.image,\n      alt: post.caption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), // Only show action icons for authenticated user\n    showActions ? postActionsElem(currentUser, post) : null, React.createElement(\"div\", {\n      className: \"relaxed content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ui sub header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, post.likes, \" likes\"), React.createElement(\"p\", {\n      className: \"post-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"ui left floated small header author\",\n      to: `/u/${post.author.username}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, post.author.username), post.caption && post.caption.length > 120 && isPreview ? captionPreviewElem(post) : post.caption), post.comments.length > 0 ? React.createElement(\"div\", {\n      className: \"ui divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : null, post.comments.map((comment, index) => {\n      // Only show up to 3 comments for posts in list\n      return isPreview && index > 2 ? null : React.createElement(\"p\", {\n        key: comment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"ui left floated small header\",\n        to: `/u/${comment.author.username}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, comment.author.username), comment.message);\n    }), isPreview && post.comments.length > 3 ? React.createElement(Link, {\n      className: \"ui left floated sub header\",\n      to: `/p/${post.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"View all comments\") : null), // Only show comment form for authenticated user\n    showActions ? React.createElement(CommentForm, {\n      post: post,\n      addComment: this.props.addComment,\n      elementId: `comment-field${post.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default PostListItem;","map":{"version":3,"sources":["/home/sergol/DBprojects/instaz/frontend/src/components/PostListItem.js"],"names":["React","Link","Redirect","CommentForm","PostListItem","Component","state","isArchiving","redirectToHome","render","props","currentUser","post","isPreview","showActions","captionPreviewElem","id","caption","postActionsElem","user","likePost","is_liked","document","getElementById","focus","author","username","setState","editPost","is_active","then","timesince_posted","avatar","image","likes","length","comments","map","comment","index","message","addComment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport CommentForm from './CommentForm';\n\nclass PostListItem extends React.Component {\n  state = {\n    isArchiving: false,\n    redirectToHome: false\n  };\n\n  render() {\n    if (this.state.redirectToHome) {\n      return <Redirect to=\"/\" />;\n    }\n\n    const { currentUser, post, isPreview, showActions } = this.props;\n    const captionPreviewElem = ({ id, caption }) => (\n      <span>\n        {caption + '...'} <Link className=\"ui sub header\" to={`/p/${id}`}>View full caption</Link>\n      </span>\n    );\n    const postActionsElem = (user, post) => (\n      <div className=\"content action-icons\">\n        <i\n          onClick={() => this.props.likePost(post.id)}\n          className={\"clickable big heart like icon\" + (post.is_liked ? \" red\" : \"\")}>\n        </i>\n        <i\n          onClick={() => { document.getElementById(`comment-field${post.id}`).focus(); }}\n          className=\"clickable big comment outline link icon\">\n        </i>\n        <i className=\"clickable big share icon\"></i>\n        {\n          // Show archive button for post owner\n          post.author.username === user.username\n            ? <span\n                className=\"clickable right floated\"\n                data-inverted=\"\"\n                data-tooltip={ this.state.isArchiving ? \"Archiving...\" : \"Archive this post\" }\n                data-position=\"top center\"\n                onClick={() => {\n                  this.setState({ isArchiving: true });\n                  this.props.editPost({ ...post, is_active: false }).then(() => {\n                    this.setState({ isArchiving: false, redirectToHome: !isPreview });\n                  });\n                }}>\n                  <i className={\n                    (this.state.isArchiving\n                     ? \"ui loading circle notch\"\n                     : \"archive icon\") + \" big link icon\"\n                  }></i>\n              </span>\n          : null\n        }\n      </div>\n    );\n\n    return(\n      <div className=\"ui fluid card\">\n        <div className=\"content\">\n          <Link className=\"ui right floated sub header\" to={`/p/${post.id}`}>{post.timesince_posted} ago</Link>\n          <Link className=\"ui left floated small header\" to={`/u/${post.author.username}`}>\n            <img className=\"ui avatar image\" src={post.author.avatar} alt={`${post.author.username}'s avatar`} />\n            {post.author.username}\n          </Link>\n        </div>\n        <div className=\"image\">\n          <img src={post.image} alt={post.caption} />\n        </div>\n        {\n          // Only show action icons for authenticated user\n          showActions ? postActionsElem(currentUser, post) : null\n        }\n        <div className=\"relaxed content\">\n          <p className=\"ui sub header\">{post.likes} likes</p>\n          <p className=\"post-description\">\n            <Link className=\"ui left floated small header author\" to={`/u/${post.author.username}`}>\n              {post.author.username}\n            </Link>\n            {post.caption && post.caption.length > 120 && isPreview ? captionPreviewElem(post) : post.caption}\n          </p>\n          { post.comments.length > 0 ? <div className=\"ui divider\"></div> : null }\n          {\n            post.comments.map((comment, index) => {\n              // Only show up to 3 comments for posts in list\n              return isPreview && index > 2 ? null : (\n                <p key={comment.id}>\n                  <Link className=\"ui left floated small header\" to={`/u/${comment.author.username}`}>\n                    {comment.author.username}\n                  </Link>\n                  {comment.message}\n                </p>\n              )\n            })\n          }\n          {\n            isPreview && post.comments.length > 3\n            ? <Link className=\"ui left floated sub header\" to={`/p/${post.id}`}>View all comments</Link>\n            : null\n          }\n        </div>\n        {\n          // Only show comment form for authenticated user\n          showActions ? (\n            <CommentForm post={post} addComment={this.props.addComment} elementId={`comment-field${post.id}`} />\n          ) : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default PostListItem;\n"]},"metadata":{},"sourceType":"module"}